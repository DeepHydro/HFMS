//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace HydroCloud.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/HdyroCloud.Web")]
    public partial class Station : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private string NameField;
        
        private string SiteTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteType {
            get {
                return this.SiteTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteTypeField, value) != true)) {
                    this.SiteTypeField = value;
                    this.RaisePropertyChanged("SiteType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Variable", Namespace="http://schemas.datacontract.org/2004/07/HdyroCloud.Web")]
    public partial class Variable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryCriteria", Namespace="http://schemas.datacontract.org/2004/07/HdyroCloud.Web")]
    public partial class QueryCriteria : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HydroCloud.ServiceReference.BBox BBoxField;
        
        private System.DateTime EndField;
        
        private int MaximumRecordField;
        
        private int SiteIDField;
        
        private System.DateTime StartField;
        
        private int VariableIDField;
        
        private string VariableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydroCloud.ServiceReference.BBox BBox {
            get {
                return this.BBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.BBoxField, value) != true)) {
                    this.BBoxField = value;
                    this.RaisePropertyChanged("BBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumRecord {
            get {
                return this.MaximumRecordField;
            }
            set {
                if ((this.MaximumRecordField.Equals(value) != true)) {
                    this.MaximumRecordField = value;
                    this.RaisePropertyChanged("MaximumRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariableID {
            get {
                return this.VariableIDField;
            }
            set {
                if ((this.VariableIDField.Equals(value) != true)) {
                    this.VariableIDField = value;
                    this.RaisePropertyChanged("VariableID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariableName {
            get {
                return this.VariableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableNameField, value) != true)) {
                    this.VariableNameField = value;
                    this.RaisePropertyChanged("VariableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BBox", Namespace="http://schemas.datacontract.org/2004/07/HdyroCloud.Web")]
    public partial class BBox : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double EastField;
        
        private double NorthField;
        
        private double SouthField;
        
        private double WestField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double East {
            get {
                return this.EastField;
            }
            set {
                if ((this.EastField.Equals(value) != true)) {
                    this.EastField = value;
                    this.RaisePropertyChanged("East");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double North {
            get {
                return this.NorthField;
            }
            set {
                if ((this.NorthField.Equals(value) != true)) {
                    this.NorthField = value;
                    this.RaisePropertyChanged("North");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double South {
            get {
                return this.SouthField;
            }
            set {
                if ((this.SouthField.Equals(value) != true)) {
                    this.SouthField = value;
                    this.RaisePropertyChanged("South");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double West {
            get {
                return this.WestField;
            }
            set {
                if ((this.WestField.Equals(value) != true)) {
                    this.WestField = value;
                    this.RaisePropertyChanged("West");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoubleTimeSeries", Namespace="http://schemas.datacontract.org/2004/07/HdyroCloud.Web")]
    public partial class DoubleTimeSeries : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<System.DateTime> DateTimesField;
        
        private System.Collections.ObjectModel.ObservableCollection<double> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<System.DateTime> DateTimes {
            get {
                return this.DateTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimesField, value) != true)) {
                    this.DateTimesField = value;
                    this.RaisePropertyChanged("DateTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<double> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegularGrid", Namespace="http://schemas.datacontract.org/2004/07/HdyroCloud.Web.RS")]
    public partial class RegularGrid : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double CellSizeField;
        
        private System.Collections.ObjectModel.ObservableCollection<double> CentroidXField;
        
        private System.Collections.ObjectModel.ObservableCollection<double> CentroidYField;
        
        private int NCellField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CellSize {
            get {
                return this.CellSizeField;
            }
            set {
                if ((this.CellSizeField.Equals(value) != true)) {
                    this.CellSizeField = value;
                    this.RaisePropertyChanged("CellSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<double> CentroidX {
            get {
                return this.CentroidXField;
            }
            set {
                if ((object.ReferenceEquals(this.CentroidXField, value) != true)) {
                    this.CentroidXField = value;
                    this.RaisePropertyChanged("CentroidX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<double> CentroidY {
            get {
                return this.CentroidYField;
            }
            set {
                if ((object.ReferenceEquals(this.CentroidYField, value) != true)) {
                    this.CentroidYField = value;
                    this.RaisePropertyChanged("CentroidY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NCell {
            get {
                return this.NCellField;
            }
            set {
                if ((this.NCellField.Equals(value) != true)) {
                    this.NCellField = value;
                    this.RaisePropertyChanged("NCell");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorImageRecord", Namespace="http://schemas.datacontract.org/2004/07/HydroCloud.Web.RS")]
    public partial class SensorImageRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<double> BBoxField;
        
        private System.DateTime DateField;
        
        private string ImageFileField;
        
        private string ImageNameField;
        
        private string LegendFileField;
        
        private string SensorNameField;
        
        private int SerialIDField;
        
        private string VariableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<double> BBox {
            get {
                return this.BBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.BBoxField, value) != true)) {
                    this.BBoxField = value;
                    this.RaisePropertyChanged("BBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFile {
            get {
                return this.ImageFileField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFileField, value) != true)) {
                    this.ImageFileField = value;
                    this.RaisePropertyChanged("ImageFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegendFile {
            get {
                return this.LegendFileField;
            }
            set {
                if ((object.ReferenceEquals(this.LegendFileField, value) != true)) {
                    this.LegendFileField = value;
                    this.RaisePropertyChanged("LegendFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorName {
            get {
                return this.SensorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorNameField, value) != true)) {
                    this.SensorNameField = value;
                    this.RaisePropertyChanged("SensorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialID {
            get {
                return this.SerialIDField;
            }
            set {
                if ((this.SerialIDField.Equals(value) != true)) {
                    this.SerialIDField = value;
                    this.RaisePropertyChanged("SerialID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariableName {
            get {
                return this.VariableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableNameField, value) != true)) {
                    this.VariableNameField = value;
                    this.RaisePropertyChanged("VariableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ServiceReference.Service")]
    public interface Service {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetKeyWords", ReplyAction="urn:Service/GetKeyWordsResponse")]
        System.IAsyncResult BeginGetKeyWords(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetKeyWords(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetSite", ReplyAction="urn:Service/GetSiteResponse")]
        System.IAsyncResult BeginGetSite(int id, System.AsyncCallback callback, object asyncState);
        
        HydroCloud.ServiceReference.Station EndGetSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetAllSites", ReplyAction="urn:Service/GetAllSitesResponse")]
        System.IAsyncResult BeginGetAllSites(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> EndGetAllSites(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetVariableByName", ReplyAction="urn:Service/GetVariableByNameResponse")]
        System.IAsyncResult BeginGetVariableByName(string varName, System.AsyncCallback callback, object asyncState);
        
        HydroCloud.ServiceReference.Variable EndGetVariableByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetVariable", ReplyAction="urn:Service/GetVariableResponse")]
        System.IAsyncResult BeginGetVariable(int varID, System.AsyncCallback callback, object asyncState);
        
        HydroCloud.ServiceReference.Variable EndGetVariable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetSites", ReplyAction="urn:Service/GetSitesResponse")]
        System.IAsyncResult BeginGetSites(HydroCloud.ServiceReference.QueryCriteria qc, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> EndGetSites(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetDoubleTimeSeries", ReplyAction="urn:Service/GetDoubleTimeSeriesResponse")]
        System.IAsyncResult BeginGetDoubleTimeSeries(HydroCloud.ServiceReference.QueryCriteria qc, System.AsyncCallback callback, object asyncState);
        
        HydroCloud.ServiceReference.DoubleTimeSeries EndGetDoubleTimeSeries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetGrid", ReplyAction="urn:Service/GetGridResponse")]
        System.IAsyncResult BeginGetGrid(System.AsyncCallback callback, object asyncState);
        
        HydroCloud.ServiceReference.RegularGrid EndGetGrid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetTimeRange", ReplyAction="urn:Service/GetTimeRangeResponse")]
        System.IAsyncResult BeginGetTimeRange(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<double> EndGetTimeRange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetSlice", ReplyAction="urn:Service/GetSliceResponse")]
        System.IAsyncResult BeginGetSlice(int var_index, int time_index, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<double> EndGetSlice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetPointProfile", ReplyAction="urn:Service/GetPointProfileResponse")]
        System.IAsyncResult BeginGetPointProfile(int var_index, int cell_index, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<double> EndGetPointProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/DownloadImage", ReplyAction="urn:Service/DownloadImageResponse")]
        System.IAsyncResult BeginDownloadImage(string filename, System.AsyncCallback callback, object asyncState);
        
        string EndDownloadImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/DownloadLegend", ReplyAction="urn:Service/DownloadLegendResponse")]
        System.IAsyncResult BeginDownloadLegend(string filename, System.AsyncCallback callback, object asyncState);
        
        string EndDownloadLegend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Service/GetSensorImageRecord", ReplyAction="urn:Service/GetSensorImageRecordResponse")]
        System.IAsyncResult BeginGetSensorImageRecord(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.SensorImageRecord> EndGetSensorImageRecord(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceChannel : HydroCloud.ServiceReference.Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetKeyWordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetKeyWordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HydroCloud.ServiceReference.Station Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HydroCloud.ServiceReference.Station)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVariableByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVariableByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HydroCloud.ServiceReference.Variable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HydroCloud.ServiceReference.Variable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HydroCloud.ServiceReference.Variable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HydroCloud.ServiceReference.Variable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDoubleTimeSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDoubleTimeSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HydroCloud.ServiceReference.DoubleTimeSeries Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HydroCloud.ServiceReference.DoubleTimeSeries)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HydroCloud.ServiceReference.RegularGrid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HydroCloud.ServiceReference.RegularGrid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSliceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSliceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPointProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPointProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadLegendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadLegendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSensorImageRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSensorImageRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.SensorImageRecord> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.SensorImageRecord>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<HydroCloud.ServiceReference.Service>, HydroCloud.ServiceReference.Service {
        
        private BeginOperationDelegate onBeginGetKeyWordsDelegate;
        
        private EndOperationDelegate onEndGetKeyWordsDelegate;
        
        private System.Threading.SendOrPostCallback onGetKeyWordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSiteDelegate;
        
        private EndOperationDelegate onEndGetSiteDelegate;
        
        private System.Threading.SendOrPostCallback onGetSiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSitesDelegate;
        
        private EndOperationDelegate onEndGetAllSitesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSitesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVariableByNameDelegate;
        
        private EndOperationDelegate onEndGetVariableByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetVariableByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVariableDelegate;
        
        private EndOperationDelegate onEndGetVariableDelegate;
        
        private System.Threading.SendOrPostCallback onGetVariableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSitesDelegate;
        
        private EndOperationDelegate onEndGetSitesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSitesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDoubleTimeSeriesDelegate;
        
        private EndOperationDelegate onEndGetDoubleTimeSeriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDoubleTimeSeriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGridDelegate;
        
        private EndOperationDelegate onEndGetGridDelegate;
        
        private System.Threading.SendOrPostCallback onGetGridCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeRangeDelegate;
        
        private EndOperationDelegate onEndGetTimeRangeDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeRangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSliceDelegate;
        
        private EndOperationDelegate onEndGetSliceDelegate;
        
        private System.Threading.SendOrPostCallback onGetSliceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPointProfileDelegate;
        
        private EndOperationDelegate onEndGetPointProfileDelegate;
        
        private System.Threading.SendOrPostCallback onGetPointProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadImageDelegate;
        
        private EndOperationDelegate onEndDownloadImageDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadLegendDelegate;
        
        private EndOperationDelegate onEndDownloadLegendDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadLegendCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSensorImageRecordDelegate;
        
        private EndOperationDelegate onEndGetSensorImageRecordDelegate;
        
        private System.Threading.SendOrPostCallback onGetSensorImageRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetKeyWordsCompletedEventArgs> GetKeyWordsCompleted;
        
        public event System.EventHandler<GetSiteCompletedEventArgs> GetSiteCompleted;
        
        public event System.EventHandler<GetAllSitesCompletedEventArgs> GetAllSitesCompleted;
        
        public event System.EventHandler<GetVariableByNameCompletedEventArgs> GetVariableByNameCompleted;
        
        public event System.EventHandler<GetVariableCompletedEventArgs> GetVariableCompleted;
        
        public event System.EventHandler<GetSitesCompletedEventArgs> GetSitesCompleted;
        
        public event System.EventHandler<GetDoubleTimeSeriesCompletedEventArgs> GetDoubleTimeSeriesCompleted;
        
        public event System.EventHandler<GetGridCompletedEventArgs> GetGridCompleted;
        
        public event System.EventHandler<GetTimeRangeCompletedEventArgs> GetTimeRangeCompleted;
        
        public event System.EventHandler<GetSliceCompletedEventArgs> GetSliceCompleted;
        
        public event System.EventHandler<GetPointProfileCompletedEventArgs> GetPointProfileCompleted;
        
        public event System.EventHandler<DownloadImageCompletedEventArgs> DownloadImageCompleted;
        
        public event System.EventHandler<DownloadLegendCompletedEventArgs> DownloadLegendCompleted;
        
        public event System.EventHandler<GetSensorImageRecordCompletedEventArgs> GetSensorImageRecordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetKeyWords(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetKeyWords(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> HydroCloud.ServiceReference.Service.EndGetKeyWords(System.IAsyncResult result) {
            return base.Channel.EndGetKeyWords(result);
        }
        
        private System.IAsyncResult OnBeginGetKeyWords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetKeyWords(callback, asyncState);
        }
        
        private object[] OnEndGetKeyWords(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetKeyWords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetKeyWordsCompleted(object state) {
            if ((this.GetKeyWordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetKeyWordsCompleted(this, new GetKeyWordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetKeyWordsAsync() {
            this.GetKeyWordsAsync(null);
        }
        
        public void GetKeyWordsAsync(object userState) {
            if ((this.onBeginGetKeyWordsDelegate == null)) {
                this.onBeginGetKeyWordsDelegate = new BeginOperationDelegate(this.OnBeginGetKeyWords);
            }
            if ((this.onEndGetKeyWordsDelegate == null)) {
                this.onEndGetKeyWordsDelegate = new EndOperationDelegate(this.OnEndGetKeyWords);
            }
            if ((this.onGetKeyWordsCompletedDelegate == null)) {
                this.onGetKeyWordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetKeyWordsCompleted);
            }
            base.InvokeAsync(this.onBeginGetKeyWordsDelegate, null, this.onEndGetKeyWordsDelegate, this.onGetKeyWordsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetSite(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSite(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HydroCloud.ServiceReference.Station HydroCloud.ServiceReference.Service.EndGetSite(System.IAsyncResult result) {
            return base.Channel.EndGetSite(result);
        }
        
        private System.IAsyncResult OnBeginGetSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetSite(id, callback, asyncState);
        }
        
        private object[] OnEndGetSite(System.IAsyncResult result) {
            HydroCloud.ServiceReference.Station retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetSite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSiteCompleted(object state) {
            if ((this.GetSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSiteCompleted(this, new GetSiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSiteAsync(int id) {
            this.GetSiteAsync(id, null);
        }
        
        public void GetSiteAsync(int id, object userState) {
            if ((this.onBeginGetSiteDelegate == null)) {
                this.onBeginGetSiteDelegate = new BeginOperationDelegate(this.OnBeginGetSite);
            }
            if ((this.onEndGetSiteDelegate == null)) {
                this.onEndGetSiteDelegate = new EndOperationDelegate(this.OnEndGetSite);
            }
            if ((this.onGetSiteCompletedDelegate == null)) {
                this.onGetSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSiteCompleted);
            }
            base.InvokeAsync(this.onBeginGetSiteDelegate, new object[] {
                        id}, this.onEndGetSiteDelegate, this.onGetSiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetAllSites(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSites(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> HydroCloud.ServiceReference.Service.EndGetAllSites(System.IAsyncResult result) {
            return base.Channel.EndGetAllSites(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSites(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetAllSites(callback, asyncState);
        }
        
        private object[] OnEndGetAllSites(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetAllSites(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSitesCompleted(object state) {
            if ((this.GetAllSitesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSitesCompleted(this, new GetAllSitesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSitesAsync() {
            this.GetAllSitesAsync(null);
        }
        
        public void GetAllSitesAsync(object userState) {
            if ((this.onBeginGetAllSitesDelegate == null)) {
                this.onBeginGetAllSitesDelegate = new BeginOperationDelegate(this.OnBeginGetAllSites);
            }
            if ((this.onEndGetAllSitesDelegate == null)) {
                this.onEndGetAllSitesDelegate = new EndOperationDelegate(this.OnEndGetAllSites);
            }
            if ((this.onGetAllSitesCompletedDelegate == null)) {
                this.onGetAllSitesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSitesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSitesDelegate, null, this.onEndGetAllSitesDelegate, this.onGetAllSitesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetVariableByName(string varName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVariableByName(varName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HydroCloud.ServiceReference.Variable HydroCloud.ServiceReference.Service.EndGetVariableByName(System.IAsyncResult result) {
            return base.Channel.EndGetVariableByName(result);
        }
        
        private System.IAsyncResult OnBeginGetVariableByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string varName = ((string)(inValues[0]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetVariableByName(varName, callback, asyncState);
        }
        
        private object[] OnEndGetVariableByName(System.IAsyncResult result) {
            HydroCloud.ServiceReference.Variable retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetVariableByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVariableByNameCompleted(object state) {
            if ((this.GetVariableByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVariableByNameCompleted(this, new GetVariableByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVariableByNameAsync(string varName) {
            this.GetVariableByNameAsync(varName, null);
        }
        
        public void GetVariableByNameAsync(string varName, object userState) {
            if ((this.onBeginGetVariableByNameDelegate == null)) {
                this.onBeginGetVariableByNameDelegate = new BeginOperationDelegate(this.OnBeginGetVariableByName);
            }
            if ((this.onEndGetVariableByNameDelegate == null)) {
                this.onEndGetVariableByNameDelegate = new EndOperationDelegate(this.OnEndGetVariableByName);
            }
            if ((this.onGetVariableByNameCompletedDelegate == null)) {
                this.onGetVariableByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVariableByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetVariableByNameDelegate, new object[] {
                        varName}, this.onEndGetVariableByNameDelegate, this.onGetVariableByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetVariable(int varID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVariable(varID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HydroCloud.ServiceReference.Variable HydroCloud.ServiceReference.Service.EndGetVariable(System.IAsyncResult result) {
            return base.Channel.EndGetVariable(result);
        }
        
        private System.IAsyncResult OnBeginGetVariable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int varID = ((int)(inValues[0]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetVariable(varID, callback, asyncState);
        }
        
        private object[] OnEndGetVariable(System.IAsyncResult result) {
            HydroCloud.ServiceReference.Variable retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetVariable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVariableCompleted(object state) {
            if ((this.GetVariableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVariableCompleted(this, new GetVariableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVariableAsync(int varID) {
            this.GetVariableAsync(varID, null);
        }
        
        public void GetVariableAsync(int varID, object userState) {
            if ((this.onBeginGetVariableDelegate == null)) {
                this.onBeginGetVariableDelegate = new BeginOperationDelegate(this.OnBeginGetVariable);
            }
            if ((this.onEndGetVariableDelegate == null)) {
                this.onEndGetVariableDelegate = new EndOperationDelegate(this.OnEndGetVariable);
            }
            if ((this.onGetVariableCompletedDelegate == null)) {
                this.onGetVariableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVariableCompleted);
            }
            base.InvokeAsync(this.onBeginGetVariableDelegate, new object[] {
                        varID}, this.onEndGetVariableDelegate, this.onGetVariableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetSites(HydroCloud.ServiceReference.QueryCriteria qc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSites(qc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> HydroCloud.ServiceReference.Service.EndGetSites(System.IAsyncResult result) {
            return base.Channel.EndGetSites(result);
        }
        
        private System.IAsyncResult OnBeginGetSites(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HydroCloud.ServiceReference.QueryCriteria qc = ((HydroCloud.ServiceReference.QueryCriteria)(inValues[0]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetSites(qc, callback, asyncState);
        }
        
        private object[] OnEndGetSites(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetSites(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSitesCompleted(object state) {
            if ((this.GetSitesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSitesCompleted(this, new GetSitesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSitesAsync(HydroCloud.ServiceReference.QueryCriteria qc) {
            this.GetSitesAsync(qc, null);
        }
        
        public void GetSitesAsync(HydroCloud.ServiceReference.QueryCriteria qc, object userState) {
            if ((this.onBeginGetSitesDelegate == null)) {
                this.onBeginGetSitesDelegate = new BeginOperationDelegate(this.OnBeginGetSites);
            }
            if ((this.onEndGetSitesDelegate == null)) {
                this.onEndGetSitesDelegate = new EndOperationDelegate(this.OnEndGetSites);
            }
            if ((this.onGetSitesCompletedDelegate == null)) {
                this.onGetSitesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSitesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSitesDelegate, new object[] {
                        qc}, this.onEndGetSitesDelegate, this.onGetSitesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetDoubleTimeSeries(HydroCloud.ServiceReference.QueryCriteria qc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDoubleTimeSeries(qc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HydroCloud.ServiceReference.DoubleTimeSeries HydroCloud.ServiceReference.Service.EndGetDoubleTimeSeries(System.IAsyncResult result) {
            return base.Channel.EndGetDoubleTimeSeries(result);
        }
        
        private System.IAsyncResult OnBeginGetDoubleTimeSeries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HydroCloud.ServiceReference.QueryCriteria qc = ((HydroCloud.ServiceReference.QueryCriteria)(inValues[0]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetDoubleTimeSeries(qc, callback, asyncState);
        }
        
        private object[] OnEndGetDoubleTimeSeries(System.IAsyncResult result) {
            HydroCloud.ServiceReference.DoubleTimeSeries retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetDoubleTimeSeries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDoubleTimeSeriesCompleted(object state) {
            if ((this.GetDoubleTimeSeriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDoubleTimeSeriesCompleted(this, new GetDoubleTimeSeriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDoubleTimeSeriesAsync(HydroCloud.ServiceReference.QueryCriteria qc) {
            this.GetDoubleTimeSeriesAsync(qc, null);
        }
        
        public void GetDoubleTimeSeriesAsync(HydroCloud.ServiceReference.QueryCriteria qc, object userState) {
            if ((this.onBeginGetDoubleTimeSeriesDelegate == null)) {
                this.onBeginGetDoubleTimeSeriesDelegate = new BeginOperationDelegate(this.OnBeginGetDoubleTimeSeries);
            }
            if ((this.onEndGetDoubleTimeSeriesDelegate == null)) {
                this.onEndGetDoubleTimeSeriesDelegate = new EndOperationDelegate(this.OnEndGetDoubleTimeSeries);
            }
            if ((this.onGetDoubleTimeSeriesCompletedDelegate == null)) {
                this.onGetDoubleTimeSeriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDoubleTimeSeriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDoubleTimeSeriesDelegate, new object[] {
                        qc}, this.onEndGetDoubleTimeSeriesDelegate, this.onGetDoubleTimeSeriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetGrid(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGrid(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HydroCloud.ServiceReference.RegularGrid HydroCloud.ServiceReference.Service.EndGetGrid(System.IAsyncResult result) {
            return base.Channel.EndGetGrid(result);
        }
        
        private System.IAsyncResult OnBeginGetGrid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetGrid(callback, asyncState);
        }
        
        private object[] OnEndGetGrid(System.IAsyncResult result) {
            HydroCloud.ServiceReference.RegularGrid retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetGrid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGridCompleted(object state) {
            if ((this.GetGridCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGridCompleted(this, new GetGridCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGridAsync() {
            this.GetGridAsync(null);
        }
        
        public void GetGridAsync(object userState) {
            if ((this.onBeginGetGridDelegate == null)) {
                this.onBeginGetGridDelegate = new BeginOperationDelegate(this.OnBeginGetGrid);
            }
            if ((this.onEndGetGridDelegate == null)) {
                this.onEndGetGridDelegate = new EndOperationDelegate(this.OnEndGetGrid);
            }
            if ((this.onGetGridCompletedDelegate == null)) {
                this.onGetGridCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGridCompleted);
            }
            base.InvokeAsync(this.onBeginGetGridDelegate, null, this.onEndGetGridDelegate, this.onGetGridCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetTimeRange(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeRange(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<double> HydroCloud.ServiceReference.Service.EndGetTimeRange(System.IAsyncResult result) {
            return base.Channel.EndGetTimeRange(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeRange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetTimeRange(callback, asyncState);
        }
        
        private object[] OnEndGetTimeRange(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<double> retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetTimeRange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeRangeCompleted(object state) {
            if ((this.GetTimeRangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeRangeCompleted(this, new GetTimeRangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeRangeAsync() {
            this.GetTimeRangeAsync(null);
        }
        
        public void GetTimeRangeAsync(object userState) {
            if ((this.onBeginGetTimeRangeDelegate == null)) {
                this.onBeginGetTimeRangeDelegate = new BeginOperationDelegate(this.OnBeginGetTimeRange);
            }
            if ((this.onEndGetTimeRangeDelegate == null)) {
                this.onEndGetTimeRangeDelegate = new EndOperationDelegate(this.OnEndGetTimeRange);
            }
            if ((this.onGetTimeRangeCompletedDelegate == null)) {
                this.onGetTimeRangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeRangeCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeRangeDelegate, null, this.onEndGetTimeRangeDelegate, this.onGetTimeRangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetSlice(int var_index, int time_index, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlice(var_index, time_index, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<double> HydroCloud.ServiceReference.Service.EndGetSlice(System.IAsyncResult result) {
            return base.Channel.EndGetSlice(result);
        }
        
        private System.IAsyncResult OnBeginGetSlice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int var_index = ((int)(inValues[0]));
            int time_index = ((int)(inValues[1]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetSlice(var_index, time_index, callback, asyncState);
        }
        
        private object[] OnEndGetSlice(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<double> retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetSlice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSliceCompleted(object state) {
            if ((this.GetSliceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSliceCompleted(this, new GetSliceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSliceAsync(int var_index, int time_index) {
            this.GetSliceAsync(var_index, time_index, null);
        }
        
        public void GetSliceAsync(int var_index, int time_index, object userState) {
            if ((this.onBeginGetSliceDelegate == null)) {
                this.onBeginGetSliceDelegate = new BeginOperationDelegate(this.OnBeginGetSlice);
            }
            if ((this.onEndGetSliceDelegate == null)) {
                this.onEndGetSliceDelegate = new EndOperationDelegate(this.OnEndGetSlice);
            }
            if ((this.onGetSliceCompletedDelegate == null)) {
                this.onGetSliceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSliceCompleted);
            }
            base.InvokeAsync(this.onBeginGetSliceDelegate, new object[] {
                        var_index,
                        time_index}, this.onEndGetSliceDelegate, this.onGetSliceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetPointProfile(int var_index, int cell_index, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPointProfile(var_index, cell_index, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<double> HydroCloud.ServiceReference.Service.EndGetPointProfile(System.IAsyncResult result) {
            return base.Channel.EndGetPointProfile(result);
        }
        
        private System.IAsyncResult OnBeginGetPointProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int var_index = ((int)(inValues[0]));
            int cell_index = ((int)(inValues[1]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetPointProfile(var_index, cell_index, callback, asyncState);
        }
        
        private object[] OnEndGetPointProfile(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<double> retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetPointProfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPointProfileCompleted(object state) {
            if ((this.GetPointProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPointProfileCompleted(this, new GetPointProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPointProfileAsync(int var_index, int cell_index) {
            this.GetPointProfileAsync(var_index, cell_index, null);
        }
        
        public void GetPointProfileAsync(int var_index, int cell_index, object userState) {
            if ((this.onBeginGetPointProfileDelegate == null)) {
                this.onBeginGetPointProfileDelegate = new BeginOperationDelegate(this.OnBeginGetPointProfile);
            }
            if ((this.onEndGetPointProfileDelegate == null)) {
                this.onEndGetPointProfileDelegate = new EndOperationDelegate(this.OnEndGetPointProfile);
            }
            if ((this.onGetPointProfileCompletedDelegate == null)) {
                this.onGetPointProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPointProfileCompleted);
            }
            base.InvokeAsync(this.onBeginGetPointProfileDelegate, new object[] {
                        var_index,
                        cell_index}, this.onEndGetPointProfileDelegate, this.onGetPointProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginDownloadImage(string filename, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadImage(filename, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HydroCloud.ServiceReference.Service.EndDownloadImage(System.IAsyncResult result) {
            return base.Channel.EndDownloadImage(result);
        }
        
        private System.IAsyncResult OnBeginDownloadImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filename = ((string)(inValues[0]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginDownloadImage(filename, callback, asyncState);
        }
        
        private object[] OnEndDownloadImage(System.IAsyncResult result) {
            string retVal = ((HydroCloud.ServiceReference.Service)(this)).EndDownloadImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadImageCompleted(object state) {
            if ((this.DownloadImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadImageCompleted(this, new DownloadImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadImageAsync(string filename) {
            this.DownloadImageAsync(filename, null);
        }
        
        public void DownloadImageAsync(string filename, object userState) {
            if ((this.onBeginDownloadImageDelegate == null)) {
                this.onBeginDownloadImageDelegate = new BeginOperationDelegate(this.OnBeginDownloadImage);
            }
            if ((this.onEndDownloadImageDelegate == null)) {
                this.onEndDownloadImageDelegate = new EndOperationDelegate(this.OnEndDownloadImage);
            }
            if ((this.onDownloadImageCompletedDelegate == null)) {
                this.onDownloadImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadImageCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadImageDelegate, new object[] {
                        filename}, this.onEndDownloadImageDelegate, this.onDownloadImageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginDownloadLegend(string filename, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadLegend(filename, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HydroCloud.ServiceReference.Service.EndDownloadLegend(System.IAsyncResult result) {
            return base.Channel.EndDownloadLegend(result);
        }
        
        private System.IAsyncResult OnBeginDownloadLegend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filename = ((string)(inValues[0]));
            return ((HydroCloud.ServiceReference.Service)(this)).BeginDownloadLegend(filename, callback, asyncState);
        }
        
        private object[] OnEndDownloadLegend(System.IAsyncResult result) {
            string retVal = ((HydroCloud.ServiceReference.Service)(this)).EndDownloadLegend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadLegendCompleted(object state) {
            if ((this.DownloadLegendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadLegendCompleted(this, new DownloadLegendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadLegendAsync(string filename) {
            this.DownloadLegendAsync(filename, null);
        }
        
        public void DownloadLegendAsync(string filename, object userState) {
            if ((this.onBeginDownloadLegendDelegate == null)) {
                this.onBeginDownloadLegendDelegate = new BeginOperationDelegate(this.OnBeginDownloadLegend);
            }
            if ((this.onEndDownloadLegendDelegate == null)) {
                this.onEndDownloadLegendDelegate = new EndOperationDelegate(this.OnEndDownloadLegend);
            }
            if ((this.onDownloadLegendCompletedDelegate == null)) {
                this.onDownloadLegendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadLegendCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadLegendDelegate, new object[] {
                        filename}, this.onEndDownloadLegendDelegate, this.onDownloadLegendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HydroCloud.ServiceReference.Service.BeginGetSensorImageRecord(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSensorImageRecord(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.SensorImageRecord> HydroCloud.ServiceReference.Service.EndGetSensorImageRecord(System.IAsyncResult result) {
            return base.Channel.EndGetSensorImageRecord(result);
        }
        
        private System.IAsyncResult OnBeginGetSensorImageRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((HydroCloud.ServiceReference.Service)(this)).BeginGetSensorImageRecord(callback, asyncState);
        }
        
        private object[] OnEndGetSensorImageRecord(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.SensorImageRecord> retVal = ((HydroCloud.ServiceReference.Service)(this)).EndGetSensorImageRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSensorImageRecordCompleted(object state) {
            if ((this.GetSensorImageRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSensorImageRecordCompleted(this, new GetSensorImageRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSensorImageRecordAsync() {
            this.GetSensorImageRecordAsync(null);
        }
        
        public void GetSensorImageRecordAsync(object userState) {
            if ((this.onBeginGetSensorImageRecordDelegate == null)) {
                this.onBeginGetSensorImageRecordDelegate = new BeginOperationDelegate(this.OnBeginGetSensorImageRecord);
            }
            if ((this.onEndGetSensorImageRecordDelegate == null)) {
                this.onEndGetSensorImageRecordDelegate = new EndOperationDelegate(this.OnEndGetSensorImageRecord);
            }
            if ((this.onGetSensorImageRecordCompletedDelegate == null)) {
                this.onGetSensorImageRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSensorImageRecordCompleted);
            }
            base.InvokeAsync(this.onBeginGetSensorImageRecordDelegate, null, this.onEndGetSensorImageRecordDelegate, this.onGetSensorImageRecordCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override HydroCloud.ServiceReference.Service CreateChannel() {
            return new ServiceClientChannel(this);
        }
        
        private class ServiceClientChannel : ChannelBase<HydroCloud.ServiceReference.Service>, HydroCloud.ServiceReference.Service {
            
            public ServiceClientChannel(System.ServiceModel.ClientBase<HydroCloud.ServiceReference.Service> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetKeyWords(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetKeyWords", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetKeyWords(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetKeyWords", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSite(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetSite", _args, callback, asyncState);
                return _result;
            }
            
            public HydroCloud.ServiceReference.Station EndGetSite(System.IAsyncResult result) {
                object[] _args = new object[0];
                HydroCloud.ServiceReference.Station _result = ((HydroCloud.ServiceReference.Station)(base.EndInvoke("GetSite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllSites(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllSites", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> EndGetAllSites(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> _result = ((System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station>)(base.EndInvoke("GetAllSites", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVariableByName(string varName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = varName;
                System.IAsyncResult _result = base.BeginInvoke("GetVariableByName", _args, callback, asyncState);
                return _result;
            }
            
            public HydroCloud.ServiceReference.Variable EndGetVariableByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                HydroCloud.ServiceReference.Variable _result = ((HydroCloud.ServiceReference.Variable)(base.EndInvoke("GetVariableByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVariable(int varID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = varID;
                System.IAsyncResult _result = base.BeginInvoke("GetVariable", _args, callback, asyncState);
                return _result;
            }
            
            public HydroCloud.ServiceReference.Variable EndGetVariable(System.IAsyncResult result) {
                object[] _args = new object[0];
                HydroCloud.ServiceReference.Variable _result = ((HydroCloud.ServiceReference.Variable)(base.EndInvoke("GetVariable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSites(HydroCloud.ServiceReference.QueryCriteria qc, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = qc;
                System.IAsyncResult _result = base.BeginInvoke("GetSites", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> EndGetSites(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station> _result = ((System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.Station>)(base.EndInvoke("GetSites", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDoubleTimeSeries(HydroCloud.ServiceReference.QueryCriteria qc, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = qc;
                System.IAsyncResult _result = base.BeginInvoke("GetDoubleTimeSeries", _args, callback, asyncState);
                return _result;
            }
            
            public HydroCloud.ServiceReference.DoubleTimeSeries EndGetDoubleTimeSeries(System.IAsyncResult result) {
                object[] _args = new object[0];
                HydroCloud.ServiceReference.DoubleTimeSeries _result = ((HydroCloud.ServiceReference.DoubleTimeSeries)(base.EndInvoke("GetDoubleTimeSeries", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGrid(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetGrid", _args, callback, asyncState);
                return _result;
            }
            
            public HydroCloud.ServiceReference.RegularGrid EndGetGrid(System.IAsyncResult result) {
                object[] _args = new object[0];
                HydroCloud.ServiceReference.RegularGrid _result = ((HydroCloud.ServiceReference.RegularGrid)(base.EndInvoke("GetGrid", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeRange(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTimeRange", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<double> EndGetTimeRange(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<double> _result = ((System.Collections.ObjectModel.ObservableCollection<double>)(base.EndInvoke("GetTimeRange", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSlice(int var_index, int time_index, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = var_index;
                _args[1] = time_index;
                System.IAsyncResult _result = base.BeginInvoke("GetSlice", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<double> EndGetSlice(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<double> _result = ((System.Collections.ObjectModel.ObservableCollection<double>)(base.EndInvoke("GetSlice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPointProfile(int var_index, int cell_index, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = var_index;
                _args[1] = cell_index;
                System.IAsyncResult _result = base.BeginInvoke("GetPointProfile", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<double> EndGetPointProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<double> _result = ((System.Collections.ObjectModel.ObservableCollection<double>)(base.EndInvoke("GetPointProfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownloadImage(string filename, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = filename;
                System.IAsyncResult _result = base.BeginInvoke("DownloadImage", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDownloadImage(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DownloadImage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownloadLegend(string filename, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = filename;
                System.IAsyncResult _result = base.BeginInvoke("DownloadLegend", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDownloadLegend(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DownloadLegend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSensorImageRecord(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSensorImageRecord", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.SensorImageRecord> EndGetSensorImageRecord(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.SensorImageRecord> _result = ((System.Collections.ObjectModel.ObservableCollection<HydroCloud.ServiceReference.SensorImageRecord>)(base.EndInvoke("GetSensorImageRecord", _args, result)));
                return _result;
            }
        }
    }
}
